from tkinter import *
from tkinter import ttk

MS_DELAY = 1


#####################################################
# Speedometer Window
speedometer = Tk(className="Speedometer")
speedometer.attributes('-fullscreen', True)
speedometer.configure(background='black')
#####################################################


#####################################################
# Variables
speed = IntVar()
hv_verdi = IntVar()
verdi_12v = IntVar()
torqueCommand = IntVar()
pedalGass = IntVar()
pedalBrems = IntVar()
# Temp variables
tempMotor = IntVar()
tempAir = IntVar()
tempECU = IntVar()
tempMCU = IntVar()
tempCoolant = IntVar()
tempBattery = IntVar()
#####################################################


# Defining functions for showing different windows
#####################################################
def remove_master():
    speedometer.deiconify()
    speedometer.focus_force()
    temperatures.destroy()
    temperatures.update()
    speedometer.after(MS_DELAY, speedometer_progress)


def remove_root():
    speedometer.withdraw()
    global temperatures
    temperatures = Toplevel()
    temperatures.attributes('-fullscreen', True)
    temperatures.configure(background='black')
    temperatures.focus_force()
    #########################################
    # Making the Labels for temperature window
    #########################################

    # Temperatur Motor
    temp_Motor = Label(temperatures, textvariable=tempMotor, font=(
        "Century Gothic", 135), bg="black", fg="White")
    temp_Motor.place(relx=0.01, rely=0.45, anchor="sw")
    temp_Motor_label = Label(temperatures, text="Temp Motor", font=(
        "Century Gothic", 50), bg="black", fg="#119ED9")
    temp_Motor_label.place(relx=0.01, rely=0.15, anchor="sw")

    # Temperatur Batteri
    temp_Battery = Label(temperatures, textvariable=tempBattery, font=(
        "Century Gothic", 135), bg="black", fg="White")
    temp_Battery.place(relx=0.01, rely=0.95, anchor="sw")
    temp_Battery_label = Label(temperatures, text="Temp Battery", font=(
        "Century Gothic", 50), bg="black", fg="#119ED9")
    temp_Battery_label.place(relx=0.01, rely=0.65, anchor="sw")

    # Temperatur ECU
    temp_ECU = Label(temperatures, textvariable=tempECU, font=(
        "Century Gothic", 135), bg="black", fg="White")
    temp_ECU.place(relx=0.36, rely=0.45, anchor="sw")
    temp_ECU_label = Label(temperatures, text="Temp ECU", font=(
        "Century Gothic", 50), bg="black", fg="#119ED9")
    temp_ECU_label.place(relx=0.38, rely=0.15, anchor="sw")

    temp_Air = Label(temperatures, textvariable=tempAir, font=(
        "Century Gothic", 135), bg="black", fg="White")
    temp_Air.place(relx=0.36, rely=0.95, anchor="sw")
    temp_Air_label = Label(temperatures, text="Temp Air", font=(
        "Century Gothic", 50), bg="black", fg="#119ED9")
    temp_Air_label.place(relx=0.38, rely=0.65, anchor="sw")

    temp_Coolant = Label(temperatures, textvariable=tempCoolant, font=(
        "Century Gothic", 135), bg="black", fg="White")
    temp_Coolant.place(relx=0.72, rely=0.45, anchor="sw")
    temp_Coolant_label = Label(temperatures, text="Temp Coolant", font=(
        "Century Gothic", 50), bg="black", fg="#119ED9")
    temp_Coolant_label.place(relx=0.65, rely=0.15, anchor="sw")

    temp_MCU = Label(temperatures, textvariable=tempMCU, font=(
        "Century Gothic", 135), bg="black", fg="White")
    temp_MCU.place(relx=0.72, rely=0.95, anchor="sw")
    temp_MCU_label = Label(temperatures, text="Temp MCU", font=(
        "Century Gothic", 50), bg="black", fg="#119ED9")
    temp_MCU_label.place(relx=0.70, rely=0.65, anchor="sw")
    temperatures.after(MS_DELAY, temp_progress)
    temperatures.bind("<Return>", lambda e: remove_master())

#####################################################


# Gassp√•drag
s = ttk.Style()
s.configure("green.Vertical.TProgressbar", troughcolor='blue',
            background='green', thickness=200)
pb = ttk.Progressbar(speedometer, variable=torqueCommand, orient="vertical",
                     mode="determinate", length=700, style="green.Vertical.TProgressbar")
pb.place(relx=0.05, rely=0.25)

# Temperature Motor
temperature1 = Label(speedometer, textvariable=tempMotor, font=(
    "Century Gothic", 80), bg="black", fg="White")
temperature1.place(relx=0.7, rely=0.9, anchor="sw")
temperature2 = Label(text="Temperature", font=(
    "Century Gothic", 50), bg="black", fg="#119ED9")
temperature2.place(relx=0.7, rely=0.97, anchor="sw")

# Battery Status HV
batteristatus = Label(speedometer, textvariable=speed, font=(
    "Century Gothic", 80), bg="black", fg="White")
batteristatus.place(relx=0.8, rely=0.45, anchor="sw")
batterihv = Label(text="HV", font=("Century Gothic", 50),
                  bg="black", fg="#119ED9")
batterihv.place(relx=0.8, rely=0.30, anchor="sw")

# Battery status 12v
batteri12v = Label(speedometer, textvariable=speed, font=(
    "Century Gothic", 80), bg="black", fg="White")
batteri12v.place(relx=0.8, rely=0.70, anchor="sw")
batteri12v = Label(text="12V", font=(
    "Century Gothic", 50), bg="black", fg="#119ED9")
batteri12v.place(relx=0.8, rely=0.55, anchor="sw")

# Speed
speed_digits = Label(speedometer, textvariable=speed, font=(
    "Century Gothic", 320), bg="black", fg="White")
speed_digits.place(relx=0.4, rely=0.45, anchor="center")

exit_button = Button(speedometer, text="Exit", command=speedometer.destroy)
exit_button.pack(pady=20)
speedometer.bind("<Return>", lambda e: remove_root())


def speedometer_progress():
    speed.set(20)


def temp_progress():
    tempAir.set(10)


speedometer.after(MS_DELAY, speedometer_progress)
mainloop()
